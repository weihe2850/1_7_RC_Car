<launch>
  <!-- 启动 xsens_mti_node 节点，用于处理 Xsens MTi 传感器数据 -->
  <node name="xsens_mti_node" pkg="xsens_mti_driver" type="xsens_mti_node" output="screen">
    <!-- 加载 xsens_mti_node 的参数文件 -->
    <rosparam command="load" file="$(find xsens_mti_driver)/param/xsens_mti_node.yaml" />
  </node>

  <!-- 启动 linktrack0 节点，用于处理 UWB 标签数据 -->
  <node pkg="nlink_parser" type="linktrack" name="linktrack0" output="screen">
    <!-- 配置 UWB 标签的串口参数 -->
    <param name="port_name" value="/dev/UWB_tag0"/>
    <param name="baud_rate" value="921600" />
  </node>

  <!-- 启动 EKF_Func 节点，用于处理 EKF 本地化 -->
  <node pkg="in2ulv_localization" type="localization_node" name="localization_node"
        required="true" clear_params="true"  >
    <!-- 加载 localization_node 的参数文件 -->
    <rosparam command="load" file="$(find in2ulv_localization)/config/localization_node.yaml"/>
    <rosparam command="load" file="$(find in2ulv_localization)/config/sensor_handler.yaml"/>
  </node>

  <!-- 加载 race_car_pkg 的参数文件 -->
  <rosparam file="$(find race_car_pkg)/param/params.yaml" command="load"/>

  <!-- 启动 serial_node 节点，用于处理串口通信 -->
  <node pkg="race_car_pkg" type="serial_node" name="serial_node" output="screen" />

  <!-- 启动 Control_node_ca 节点，用于控制逻辑（已注释） -->
  <!-- <node pkg="race_car_pkg" type="Control_node_ca" name="Control_node_ca" output="screen"/> -->

  <!-- 启动 Control_node_hw 节点，用于控制逻辑（已注释） -->
  <!-- <node pkg="race_car_pkg" type="Control_node_hw" name="Control_node_hw" output="screen"/> -->
</launch>